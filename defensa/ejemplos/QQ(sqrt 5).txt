_<x> := PolynomialRing(Rationals());
F<x> := NumberField(x^2 - 5);
OF := Integers(F);

k := [2,2];

primes11 := [ p[1] : p in Factorization(11 * OF)];
// [Norm(p) : p in primes];
// Factorization(11 * OF);

// for p in primes11 do
    // S_n := NewSubspace(HilbertCuspForms(F, p, k));
    // Dimension(S_n);
// end for;
// print("");
// for p in primes11 do
    // S_n := NewSubspace(HilbertCuspForms(F, p ^ 2, k));
    // Dimension(S_n);
// end for;
// S11 := HilbertCuspForms(F, 11 * OF, k);
// Dimension(S11);
// S11_n := NewSubspace(HilbertCuspForms(F, 11 * OF, k));
// Dimension(S11_n);
// Dimension(S11);

// S11a_n := NewSubspace(HilbertCuspForms(F, primes11[1], k));
// Dimension(S11a_n); // 0
// S11a2 := HilbertCuspForms(F, primes11[1] ^ 2, k);
// Dimension(S11a2); // 2

S11a2_n := NewSubspace(HilbertCuspForms(F, primes11[1] ^ 2, k));
Dimension(S11a2_n); // 2

decomp := NewformDecomposition(S11a2_n);
f := Eigenform(decomp[1]);
L := [* *];
for p in PrimesUpTo(31,F) do
    L := Append(L, HeckeEigenvalue(f,p));
end for;
L;
HeckeEigenvalueField(decomp[1]);

***OUTPUT***
2
[*
    $.1,
    -$.1,
    -1,
    -2*$.1,
    0,
    4*$.1,
    -2,
    -3,
    -5*$.1,
    2*$.1,
    2*$.1
*]
Number Field with defining polynomial x^2 - 3 over the Rational Field

***MIRANDO EL OTRO PRIMO ARRIBA DE 11 AL CUADRADO, SE OBTIENE***
2
[*
    $.1,
    -$.1,
    -1,
    0,
    -2*$.1,
    -2,
    4*$.1,
    -5*$.1,
    -3,
    2*$.1,
    2*$.1
*]
Number Field with defining polynomial x^2 - 3 over the Rational Field

***MIRANDO 11 * OF, EL PRODUCTO DE LOS DOS PRIMOS ANTERIORES, SE OBTIENE UNA COMPONENTE
DE DIMENSI\'ON 1 Y OTRA DE DIMENSI\'ON 2***
3 // dimensi\'on del espacio nuevo S_2(11 * OF)^new
[* 0, 1, -5, 1, 1, 0, 0, 0, 0, 7, 7 *] // ?`Viene de un cambio de base?
Rational Field
[*
    $.1,
    -$.1 - 1,
    -$.1 + 3,
    -1,
    -1,
    -4,
    -4,
    2*$.1 - 4,
    2*$.1 - 4,
    -$.1 + 1,
    -$.1 + 1
*] // ?`Viene de un cambio de base?
Number Field with defining polynomial x^2 - x - 8 over the Rational Field

***DEGENERACI\'ON***
S11_n_a := NewSubspace(HilbertCuspForms(F, 11 * OF, k), primes11[1]);
Dimension(S11_n_a); // 3. La dimensi\'on del espacio de nivel 11a es 0.

S11_n_b := NewSubspace(HilbertCuspForms(F, 11 * OF, k), primes11[2]);
Dimension(S11_n_b); // 3, tambi\'en. La dimensi\'on del espacio 11b es 0.

S11 := HilbertCuspForms(F, 11 * OF, k);
Dimension(S11); // 3. Todas las formas son nuevas.



*****
*****
_<x> := PolynomialRing(Rationals());
F<x> := NumberField(x^2 - 5);
OF := Integers(F);

k := [2,2];
primes11 := [ p[1] : p in Factorization(11 * OF)];
S1_n := NewSubspace(HilbertCuspForms(F, 1 * OF, k));

// Dimension(S1_n);
O1 := QuaternionOrder(S1_n);

// Discriminant(O1);
// PseudoBasis(O1);


// B := Algebra(O1);
// Gens4 := Basis(B);
// O4 := Order(Gens);

Gens1 := Generators(O1);

Gens11a2 := [Gens1[1], Gens1[2], ((3*x+1) / 2) * Gens1[3], ((3*x+1) / 2) * Gens1[4]];
O11a2 := Order(Gens11a2);
Gens11b2 := [Gens1[1], Gens1[2], (x-4) * Gens1[3], (x-4) * Gens1[4]];
O11b2 := Order(Gens11b2);
// FactoredDiscriminant(O11a2);
// FactoredDiscriminant(O11b2);
// IsMaximal(O11a2 + O11b2);

// SEARCHING FOR AN EICHLER ORDER OF LEVEL primes11[1] or primes11[2]
// *********
Gens11b := [Gens11b2[1], Gens11b2[2], (x+4) * Gens11b2[3], (x+4) * Gens11b2[4]];
O11b := Order(Gens11b);
FactoredDiscriminant(O11b);


******
****** DESCOMP DE 11 EN QQ(sqrt 5)
_<x> := PolynomialRing(Rationals());
F<x> := NumberField(x^2 - 5);
OF := Integers(F);

primes11 := [ p[1] : p in Factorization(11 * OF)];

// Factorization(11 * OF);

// Norm(ideal < OF | 11, (1+3*x) / 2 >); // 11
// Norm(ideal < OF | 11, 3 + 2*x >); // 11

11a := ideal < OF | 3 + 2*x >;
11b := ideal < OF | (1+3*x) / 2 >;

(11 * OF) eq (11a * 11b);
(11 * OF) eq (primes11[1] * primes11[2]);
[Norm(11a),Norm(11b)];
[Norm(primes11[1]),Norm(primes11[2])];

primes11[1] eq 11a; // true
primes11[1] eq 11b; // false
11a eq 11b; // false
primes11[2] eq 11b; // true
primes11[2] eq 11a; // false

****** LA CONFUSI\'ON VEN\'IA DE LA MANERA EN QUE LOS GENERADORES DE LOS
****** PRIMOS EN Factorization(11 * OF) APAREC\'IAN EXPRESADOS
***
****** SOME IDEAL CLASSES

_<x> := PolynomialRing(Rationals());
F<x> := NumberField(x^2 - 5);
OF := Integers(F);

P11a := ideal < OF | 3 + 2*x >;
P11b := ideal < OF | (1+3*x) / 2 >;

B < i, j > := QuaternionAlgebra < F | -1, -1 >;
Gens4 := Basis(B);
O4 := Order(Gens4);
O1 := MaximalOrder(O4);
Gens1 := Generators(O1);

Gens11b2 := [Gens1[1], Gens1[2], ((3*x+1) / 2) * Gens1[3], ((3*x+1) / 2) * Gens1[4]];
O11b2 := Order(Gens11b2);
// FactoredDiscriminant(O11b2)[1][1] eq P11b; // true

Gens11a2 := [Gens1[1], Gens1[2], (x-4) * Gens1[3], (x-4) * Gens1[4]];
O11a2 := Order(Gens11a2);
// Discriminant(O11a2) eq (P11a * P11a); // true

Gens11a3 := [Gens11a2[1], (x - 4) * (Gens11a2[1] + Gens11a2[2]),
    Gens11a2[3], Gens11a2[4]];
O11a3 := Order(Gens11a3);

// #LeftIdealClasses(O1); // 1
// #LeftIdealClasses(O11a2); // 3
// #LeftIdealClasses(O11a3); // takes a while


****
****

_<x> := PolynomialRing(Rationals());
F<x> := NumberField(x^2 - 5);
OF := Integers(F);

P11a := ideal < OF | 3 + 2*x >;
P11b := ideal < OF | (1+3*x) / 2 >;

B < i, j > := QuaternionAlgebra < F | -1, -1 >;
Gens4 := Basis(B);
O4 := Order(Gens4);
O1 := MaximalOrder(O4);
Gens1 := Generators(O1);

Gens11a2 := [Gens1[1], Gens1[2], (x-4) * Gens1[3], (x-4) * Gens1[4]];
O11a2 := Order(Gens11a2);
Discriminant(O11a2) eq (P11a * P11a); // true

#LeftIdealClasses(O11a2); // 3

k := [2,2];
S11a_n := NewSubspace(HilbertCuspForms(F, P11a, k));
Dimension(S11a_n); // 0
S11a2_n := NewSubspace(HilbertCuspForms(F, P11a * P11a, k));
Dimension(S11a2_n); // 2

decomp := NewformDecomposition(S11a2_n);
decomp;

f := Eigenform(decomp[1]);
L := [* *];
for p in PrimesUpTo(31,F) do
    L := Append(L, HeckeEigenvalue(f,p));
end for;
L;
HeckeEigenvalueField(decomp[1]);

for p in PrimesUpTo(31,F) do
    HeckeOperator(S11a2_n,p),Norm(p);
    print(",");
end for;

****
****
_<x> := PolynomialRing(Rationals());
F<x> := NumberField(x^2 - 5);
OF := Integers(F);

P11a := ideal < OF | 3 + 2*x >;
P11b := ideal < OF | (1+3*x) / 2 >;

k := [2,2];
S1_n := NewSubspace(HilbertCuspForms(F, 1 * OF, k));
Dimension(S1_n); // 0
S11a_n := NewSubspace(HilbertCuspForms(F, P11a, k));
Dimension(S11a_n); // 0
S11b_n := NewSubspace(HilbertCuspForms(F, P11b, k));
Dimension(S11b_n); // 0
S11_n := NewSubspace(HilbertCuspForms(F, P11a * P11b, k));
Dimension(S11_n); // 3

decomp := NewformDecomposition(S11_n);
decomp;

for i in [1..#decomp] do
    f := Eigenform(decomp[i]);
    L := [* *];
    for p in PrimesUpTo(31,F) do
        L := Append(L, HeckeEigenvalue(f,p));
    end for;
    L;
    HeckeEigenvalueField(decomp[i]);
end for;

for p in PrimesUpTo(31,F) do
    HeckeOperator(S11_n,p),Norm(p);
    print(",");
end for;

******
******
_<x> := PolynomialRing(Rationals());
F<x> := NumberField(x^2 - 5);
OF := Integers(F);
B < i, j > := QuaternionAlgebra < F | -1, -1 >;
Gens4 := Basis(B);
O4 := Order(Gens4);

k := i*j;
u := (1/4) * (x+3) + (1/4) * (x+1) * i + (1/2) * j;
v := (1/4) * (x+1) + (1/4) * (x+3) * i + (1/2) * k;

u1 := (1/4) * (x+3) + (1/4) * (x+1) * i + (1/2) * k;
v1 := (1/4) * (x+1) + (1/4) * (x+3) * i + (1/2) * j;

OO := Order([1,i,u,v]);
O1 := Order([1,i,u1,v1]);
Generators(O1);

OO eq O1; // false
O2 := OO meet O1;
Discriminant(O2);

(O4 meet O1) eq O4; // true

u1+v1;
u1-v1;